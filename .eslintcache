[{"C:\\Users\\acer\\Desktop\\Web Dev\\React\\confusion\\src\\index.js":"1","C:\\Users\\acer\\Desktop\\Web Dev\\React\\confusion\\src\\App.js":"2","C:\\Users\\acer\\Desktop\\Web Dev\\React\\confusion\\src\\reportWebVitals.js":"3","C:\\Users\\acer\\Desktop\\Web Dev\\React\\confusion\\src\\components\\MenuComponent.js":"4","C:\\Users\\acer\\Desktop\\Web Dev\\React\\confusion\\src\\shared\\dishes.js":"5","C:\\Users\\acer\\Desktop\\Web Dev\\React\\confusion\\src\\components\\DishdetailComponent.js":"6","C:\\Users\\acer\\Desktop\\Web Dev\\React\\confusion\\src\\components\\MainComponent.js":"7","C:\\Users\\acer\\Desktop\\Web Dev\\React\\confusion\\src\\components\\HeaderComponent.js":"8","C:\\Users\\acer\\Desktop\\Web Dev\\React\\confusion\\src\\components\\FooterComponent.js":"9","C:\\Users\\acer\\Desktop\\Web Dev\\React\\confusion\\src\\components\\HomeComponent.js":"10","C:\\Users\\acer\\Desktop\\Web Dev\\React\\confusion\\src\\components\\ContactComponent.js":"11","C:\\Users\\acer\\Desktop\\Web Dev\\React\\confusion\\src\\shared\\comments.js":"12","C:\\Users\\acer\\Desktop\\Web Dev\\React\\confusion\\src\\shared\\leaders.js":"13","C:\\Users\\acer\\Desktop\\Web Dev\\React\\confusion\\src\\shared\\promotions.js":"14","C:\\Users\\acer\\Desktop\\Web Dev\\React\\confusion\\src\\components\\AboutComponent.js":"15","C:\\Users\\acer\\Desktop\\Web Dev\\React\\confusion\\src\\redux\\configureStore.js":"16","C:\\Users\\acer\\Desktop\\Web Dev\\React\\confusion\\src\\redux\\promotions.js":"17","C:\\Users\\acer\\Desktop\\Web Dev\\React\\confusion\\src\\redux\\leaders.js":"18","C:\\Users\\acer\\Desktop\\Web Dev\\React\\confusion\\src\\redux\\dishes.js":"19","C:\\Users\\acer\\Desktop\\Web Dev\\React\\confusion\\src\\redux\\comments.js":"20","C:\\Users\\acer\\Desktop\\Web Dev\\React\\confusion\\src\\redux\\ActionTypes.js":"21","C:\\Users\\acer\\Desktop\\Web Dev\\React\\confusion\\src\\redux\\ActionCreators.js":"22","C:\\Users\\acer\\Desktop\\Web Dev\\React\\confusion\\src\\components\\LoadingComponent.js":"23","C:\\Users\\acer\\Desktop\\Web Dev\\React\\confusion\\src\\redux\\forms.js":"24","C:\\Users\\acer\\Desktop\\Web Dev\\React\\confusion\\src\\shared\\baseUrl.js":"25"},{"size":432,"mtime":1609006724159,"results":"26","hashOfConfig":"27"},{"size":532,"mtime":1609450450889,"results":"28","hashOfConfig":"27"},{"size":362,"mtime":499162500000,"results":"29","hashOfConfig":"27"},{"size":2334,"mtime":1609785833128,"results":"30","hashOfConfig":"27"},{"size":1490,"mtime":1609024092234,"results":"31","hashOfConfig":"27"},{"size":7310,"mtime":1609786143955,"results":"32","hashOfConfig":"27"},{"size":3464,"mtime":1609785744123,"results":"33","hashOfConfig":"27"},{"size":5452,"mtime":1609450953837,"results":"34","hashOfConfig":"27"},{"size":2629,"mtime":1609184082542,"results":"35","hashOfConfig":"27"},{"size":1695,"mtime":1609786106555,"results":"36","hashOfConfig":"27"},{"size":10224,"mtime":1609627177188,"results":"37","hashOfConfig":"27"},{"size":4279,"mtime":1609024124266,"results":"38","hashOfConfig":"27"},{"size":2339,"mtime":1609024181261,"results":"39","hashOfConfig":"27"},{"size":445,"mtime":1609024213644,"results":"40","hashOfConfig":"27"},{"size":4453,"mtime":1609195786784,"results":"41","hashOfConfig":"27"},{"size":795,"mtime":1609786370907,"results":"42","hashOfConfig":"27"},{"size":645,"mtime":1609785337765,"results":"43","hashOfConfig":"27"},{"size":184,"mtime":1609604161429,"results":"44","hashOfConfig":"27"},{"size":633,"mtime":1609785143529,"results":"45","hashOfConfig":"27"},{"size":763,"mtime":1609785344734,"results":"46","hashOfConfig":"27"},{"size":411,"mtime":1609783989653,"results":"47","hashOfConfig":"27"},{"size":3278,"mtime":1609864505678,"results":"48","hashOfConfig":"27"},{"size":265,"mtime":1609624558142,"results":"49","hashOfConfig":"27"},{"size":169,"mtime":1609626661127,"results":"50","hashOfConfig":"27"},{"size":48,"mtime":1609783872918,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"1db36dl",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"54"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"54"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"54"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"C:\\Users\\acer\\Desktop\\Web Dev\\React\\confusion\\src\\index.js",[],["108","109"],"C:\\Users\\acer\\Desktop\\Web Dev\\React\\confusion\\src\\App.js",[],"C:\\Users\\acer\\Desktop\\Web Dev\\React\\confusion\\src\\reportWebVitals.js",[],"C:\\Users\\acer\\Desktop\\Web Dev\\React\\confusion\\src\\components\\MenuComponent.js",[],"C:\\Users\\acer\\Desktop\\Web Dev\\React\\confusion\\src\\shared\\dishes.js",[],["110","111"],"C:\\Users\\acer\\Desktop\\Web Dev\\React\\confusion\\src\\components\\DishdetailComponent.js",["112","113","114"],"import React, { Component } from 'react';\r\nimport { Card, CardImg, CardText, CardBody, CardTitle, Breadcrumb, \r\n    BreadcrumbItem, Button, Modal, ModalHeader, ModalBody, Row, Col, Label } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Control, LocalForm, Errors } from 'react-redux-form';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\n    function RenderDish({ dish }) {\r\n        return(\r\n            <div className=\"col-12 col-md-5 m-1\">\r\n                <Card>\r\n                <CardImg width=\"100%\" src={baseUrl + dish.image} alt={dish.name} />\r\n                <CardBody>\r\n                    <CardTitle>{dish.name}</CardTitle>\r\n                    <CardText>{dish.description}</CardText>\r\n                </CardBody>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    function RenderComments({ comments, addComment, dishId }) {\r\n\r\n        const comment = comments.map((comment) => {\r\n            let date = new Date(comment.date);\r\n            return(\r\n                <li>\r\n                    <p>{comment.comment}</p>\r\n\r\n                    <p>--{comment.author}, {date.toDateString()}.</p>\r\n                </li>\r\n            )\r\n        });\r\n\r\n        return(\r\n            <div className=\"col-12 col-md-5 m-1\">\r\n                <h4>Comments</h4>\r\n                <ul className=\"list-unstyled\">\r\n                    {comment}\r\n                </ul>\r\n                <CommentForm dishId={dishId} addComment={addComment}/>\r\n            </div> \r\n        )\r\n    }\r\n\r\n    const required = (val) => val && val.length;\r\n    const maxLength = (len) => (val) => !(val) || (val.length <= len);\r\n    const minLength = (len) => (val) => (val) && (val.length >= len);\r\n\r\n    class CommentForm extends Component {\r\n        constructor(props) {\r\n            super(props);\r\n\r\n            this.state = {\r\n                isModalOpen: false\r\n            }\r\n\r\n            this.toggleModal = this.toggleModal.bind(this);\r\n            this.handleSubmit = this.handleSubmit.bind(this);\r\n        }\r\n\r\n        toggleModal() {\r\n            this.setState({\r\n                isModalOpen: !this.state.isModalOpen\r\n            });\r\n        }\r\n\r\n        handleSubmit(values) {\r\n            this.toggleModal();\r\n            this.props.addComment(this.props.dishId, values.rating, values.author, values.comment)\r\n        }\r\n\r\n        render() {\r\n            return(\r\n                <div>\r\n                <Button outline onClick={this.toggleModal}>\r\n                    <span className=\"fa fa-pencil fa-lg\"></span> Submit comment\r\n                </Button>\r\n\r\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                    <ModalHeader toggle={this.toggleModal}>Submit Comment</ModalHeader>\r\n                    <ModalBody>\r\n                        <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\r\n                            <Row className=\"form-group\">\r\n                                <Col>\r\n                                    <Label htmlFor=\"rating\">Rating</Label>\r\n                                    <Control.select model=\".rating\" name=\"rating\" id=\"rating\"\r\n                                    className=\"form-control\">\r\n                                        <option>1</option>\r\n                                        <option>2</option>\r\n                                        <option>3</option>\r\n                                        <option>4</option>\r\n                                        <option>5</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col>\r\n                                    <Label htmlFor=\"author\">Your Name</Label>\r\n                                    <Control.text model=\".author\" name=\"author\" id=\"author\"\r\n                                    className=\"form-control\" \r\n                                    validators={{\r\n                                        required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                    }} />\r\n                                    <Errors className=\"text-danger\" model=\".author\"\r\n                                    show=\"touched\" messages={{\r\n                                        required: 'Required',\r\n                                        minLength: 'Must be greater than 2 characters',\r\n                                        maxLength: 'Must be less than 16 characters'\r\n                                    }}/>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col>\r\n                                    <Label htmlFor=\"comment\">Comment</Label>\r\n                                    <Control.textarea model=\".comment\" name=\"comment\" id=\"comment\"\r\n                                    className=\"form-control\" rows=\"6\" />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col>\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                        Submit\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </LocalForm>\r\n                    </ModalBody>\r\n                </Modal>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\n    const DishDetail = props => {\r\n\r\n        if(props.isLoading) {\r\n            return(\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <Loading />\r\n                    </div>\r\n                </div>\r\n            );\r\n        } else if(props.error) {\r\n            return(\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <h4>{props.error}</h4>\r\n                    </div>\r\n                </div>\r\n            );\r\n        } else if (props.dish != null) {\r\n            return(\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <Breadcrumb>\r\n                            <BreadcrumbItem>\r\n                                <Link to='/menu'>Menu</Link>\r\n                            </BreadcrumbItem>\r\n                            <BreadcrumbItem active>{props.dish.name}</BreadcrumbItem>\r\n                        </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>{props.dish.name}</h3>\r\n                        <hr />\r\n                    </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <RenderDish dish={props.dish} />\r\n                        <RenderComments comments={props.comments}\r\n                        addComment={props.addComment}\r\n                        dishId={props.dish.id} />\r\n                    </div>\r\n                </div>\r\n            )\r\n        } else {\r\n            return(\r\n                <div></div>\r\n            )\r\n        }\r\n    };\r\n\r\nexport default DishDetail;","C:\\Users\\acer\\Desktop\\Web Dev\\React\\confusion\\src\\components\\MainComponent.js",["115"],"import React, { Component } from 'react';\r\nimport Home from './HomeComponent';\r\nimport Menu from './MenuComponent';\r\nimport Contact from './ContactComponent';\r\nimport About from './AboutComponent';\r\nimport DishDetail from './DishdetailComponent';\r\nimport Header from './HeaderComponent';\r\nimport Footer from './FooterComponent';\r\nimport { Switch, Route, Redirect, withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { addComment, fetchDishes, fetchComments, fetchPromos } from '../redux/ActionCreators';\r\nimport { actions } from 'react-redux-form';\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        dishes: state.dishes,\r\n        comments: state.comments,\r\n        promotions: state.promotions,\r\n        leaders: state.leaders\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    addComment: (dishId, rating, author, comment) => dispatch(addComment(dishId, rating, author, comment)),\r\n    fetchDishes: () => {dispatch(fetchDishes())},\r\n    resetFeedbackForm: () => { dispatch(actions.reset('feedback'))},\r\n    fetchComments: () => {dispatch(fetchComments())},\r\n    fetchPromos: () => {dispatch(fetchPromos())},\r\n});\r\n\r\nclass Main extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.fetchDishes();\r\n        this.props.fetchComments();\r\n        this.props.fetchPromos();\r\n    }\r\n\r\n    render() {\r\n\r\n        const HomePage = () => {\r\n            return(\r\n                <Home \r\n                dish={ this.props.dishes.dishes.filter( (dish) => dish.featured )[0] }\r\n                dishesLoading={this.props.dishes.isLoading}\r\n                dishesError={this.props.dishes.error}\r\n                promo={ this.props.promotions.promotions.filter( (promo) => promo.featured )[0] }\r\n                promosLoading={this.props.promotions.isLoading}\r\n                promosError={this.props.promotions.error}\r\n                leader={ this.props.leaders.filter( (leader) => leader.featured )[0] }\r\n                />\r\n            );\r\n        }\r\n\r\n        const DishWithId = ({ match }) => {\r\n            return(\r\n                <DishDetail dish={ this.props.dishes.dishes.filter(dish => dish.id === parseInt(match.params.dishId,10))[0] }\r\n                isLoading={this.props.dishes.isLoading}\r\n                error={this.props.dishes.error}\r\n                comments={ this.props.comments.comments.filter(comment => comment.dishId === parseInt(match.params.dishId,10)) }\r\n                commentsError={this.props.comments.error}\r\n                addComment={this.props.addComment}\r\n                />\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <Header />\r\n                <Switch>\r\n                    <Route path=\"/home\" component={HomePage} />\r\n                    <Route exact path=\"/menu\" component={ () => <Menu dishes={this.props.dishes} /> } />\r\n                    <Route path=\"/menu/:dishId\" component={DishWithId} />\r\n                    <Route exact path=\"/contactus\" component={() => <Contact resetFeedbackForm={this.props.resetFeedbackForm} /> } />\r\n                    <Route exact path=\"/about\" component={ () => <About leaders={this.props.leaders} /> } />\r\n                    <Redirect to=\"/home\" />\r\n                </Switch>\r\n                <Footer />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter((connect(mapStateToProps, mapDispatchToProps)(Main)));","C:\\Users\\acer\\Desktop\\Web Dev\\React\\confusion\\src\\components\\HeaderComponent.js",[],"C:\\Users\\acer\\Desktop\\Web Dev\\React\\confusion\\src\\components\\FooterComponent.js",[],"C:\\Users\\acer\\Desktop\\Web Dev\\React\\confusion\\src\\components\\HomeComponent.js",[],"C:\\Users\\acer\\Desktop\\Web Dev\\React\\confusion\\src\\components\\ContactComponent.js",["116","117","118","119","120","121","122","123"],"import React, { Component } from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Button, Label, Col, Row } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Control, Form, Errors, actions } from 'react-redux-form';\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => (val) && (val.length >= len);\r\nconst isNumber = (val) => !isNaN(Number(val));\r\nconst validEmail = (val) => /[a-zA-Z0-9-_.]{6,30}@[a-zA-Z]{2,10}\\.[a-zA-Z]{2,10}(\\.[a-zA-Z]+)?/g.test(val);\r\n\r\nclass Contact extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleSubmit(values) {\r\n        console.log(\"Current State is: \" + JSON.stringify(values));\r\n        alert(\"Current State is: \" + JSON.stringify(values));\r\n        this.props.resetFeedbackForm();\r\n    }\r\n\r\n    render() {\r\n\r\n        document.title = 'Contact';\r\n\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem>\r\n                            <Link to='/home'>Home</Link>\r\n                        </BreadcrumbItem>\r\n                        <BreadcrumbItem active>Contact Us</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>Contact Us</h3>\r\n                        <hr />\r\n                        </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                    <h3>Location Information</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-4 offset-sm-1\">\r\n                            <h5>Our Address</h5>\r\n                            <address>\r\n                            121, Clear Water Bay Road<br />\r\n                            Clear Water Bay, Kowloon<br />\r\n                            HONG KONG<br />\r\n                            <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\r\n                            <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\r\n                            <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\r\n                            </address>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-6 offset-sm-1\">\r\n                        <h5>Map of our Location</h5>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-11 offset-sm-1\">\r\n                        <div className=\"btn-group\" role=\"group\">\r\n                            <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\r\n                            <a role=\"button\" className=\"btn btn-info\" href=\"https://skype.com\"><i className=\"fa fa-skype\"></i> Skype</a>\r\n                            <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n\r\n                        {/*COMIENZA EL FORMULARIO*/}\r\n                        <h3>Send us your feedback</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-md-9\">\r\n                        <Form model=\"feedback\" onSubmit={(values) => this.handleSubmit(values)}>\r\n\r\n                            {/*FIRSTNAME*/}\r\n\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"firstname\" md={2}>First Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\"\r\n                                    placeholder=\"First Name\" \r\n                                    className=\"form-control\"\r\n                                    validators={{\r\n                                        required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                    }} />\r\n                                    <Errors className=\"text-danger\" model=\".firstname\"\r\n                                    show=\"touched\" messages={{\r\n                                        required: 'Required',\r\n                                        minLength: 'Must be greater than 2 characters',\r\n                                        maxLength: 'Must be less than 16 characters'\r\n                                    }}/>\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            {/*LASTNAME*/}\r\n\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"lastname\" md={2}>First Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\"\r\n                                    placeholder=\"Last Name\" \r\n                                    className=\"form-control\"\r\n                                    validators={{\r\n                                        required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                    }} />\r\n                                    <Errors className=\"text-danger\" model=\".lastname\"\r\n                                    show=\"touched\" messages={{\r\n                                        required: 'Required',\r\n                                        minLength: 'Must be greater than 2 characters',\r\n                                        maxLength: 'Must be less than 16 characters'\r\n                                    }}/>\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            {/*TELNUM*/}\r\n\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\"\r\n                                    placeholder=\"Tel. Number\" className=\"form-control\" \r\n                                    validators={{\r\n                                        required, minLength: minLength(8), maxLength: maxLength(16), isNumber\r\n                                    }} />\r\n                                    <Errors className=\"text-danger\" model=\".telnum\"\r\n                                    show=\"touched\" messages={{\r\n                                        required: 'Required',\r\n                                        minLength: 'Must be greater than 7 numbers',\r\n                                        maxLength: 'Must be less than 17 numbers',\r\n                                        isNumber: 'Must be a number'\r\n                                    }}/>\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            {/*EMAIL*/}\r\n\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\"\r\n                                    placeholder=\"Email\" className=\"form-control\"\r\n                                    validators={{\r\n                                        required, validEmail\r\n                                    }} />\r\n                                    <Errors className=\"text-danger\" model=\".email\"\r\n                                    show=\"touched\" messages={{\r\n                                        required: 'Required',\r\n                                        validEmail: 'Must be a valid email'\r\n                                    }}/>\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            {/*AGREE*/}\r\n\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size: 6, offset: 2}}>\r\n                                    <div className=\"form-check\">\r\n                                        <Label check>\r\n                                            <Control.checkbox model=\".agree\" name=\"agree\"\r\n                                            className=\"form-check-input\" /> {' '}\r\n                                            <strong>May we contact you?</strong>\r\n                                        </Label>\r\n                                    </div>\r\n                                </Col>\r\n                                <Col md={{size: 3, offset: 1}}>\r\n                                    <Control.select model=\".contacType\" name=\"contactType\"\r\n                                    className=\"form-control\">\r\n                                        <option>Tel.</option>\r\n                                        <option>Email</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\r\n                                <Col md={10}>\r\n                                    <Control.textarea model=\".message\" id=\"message\" name=\"message\" rows=\"12\"\r\n                                    className=\"form-control\" />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size: 10, offset: 2}}>\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                        Send Feedback\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </Form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Contact;","C:\\Users\\acer\\Desktop\\Web Dev\\React\\confusion\\src\\shared\\comments.js",[],["124","125"],"C:\\Users\\acer\\Desktop\\Web Dev\\React\\confusion\\src\\shared\\leaders.js",[],"C:\\Users\\acer\\Desktop\\Web Dev\\React\\confusion\\src\\shared\\promotions.js",[],"C:\\Users\\acer\\Desktop\\Web Dev\\React\\confusion\\src\\components\\AboutComponent.js",[],"C:\\Users\\acer\\Desktop\\Web Dev\\React\\confusion\\src\\redux\\configureStore.js",[],"C:\\Users\\acer\\Desktop\\Web Dev\\React\\confusion\\src\\redux\\promotions.js",[],"C:\\Users\\acer\\Desktop\\Web Dev\\React\\confusion\\src\\redux\\leaders.js",[],"C:\\Users\\acer\\Desktop\\Web Dev\\React\\confusion\\src\\redux\\dishes.js",[],"C:\\Users\\acer\\Desktop\\Web Dev\\React\\confusion\\src\\redux\\comments.js",[],"C:\\Users\\acer\\Desktop\\Web Dev\\React\\confusion\\src\\redux\\ActionTypes.js",[],"C:\\Users\\acer\\Desktop\\Web Dev\\React\\confusion\\src\\redux\\ActionCreators.js",[],"C:\\Users\\acer\\Desktop\\Web Dev\\React\\confusion\\src\\components\\LoadingComponent.js",[],"C:\\Users\\acer\\Desktop\\Web Dev\\React\\confusion\\src\\redux\\forms.js",[],"C:\\Users\\acer\\Desktop\\Web Dev\\React\\confusion\\src\\shared\\baseUrl.js",[],{"ruleId":"126","replacedBy":"127"},{"ruleId":"128","replacedBy":"129"},{"ruleId":"126","replacedBy":"130"},{"ruleId":"128","replacedBy":"131"},{"ruleId":"132","severity":1,"message":"133","line":88,"column":37,"nodeType":"134","endLine":89,"endColumn":62},{"ruleId":"132","severity":1,"message":"135","line":101,"column":37,"nodeType":"134","endLine":105,"endColumn":42},{"ruleId":"132","severity":1,"message":"136","line":117,"column":37,"nodeType":"134","endLine":118,"endColumn":73},{"ruleId":"137","severity":1,"message":"138","line":33,"column":5,"nodeType":"139","messageId":"140","endLine":35,"endColumn":6},{"ruleId":"141","severity":1,"message":"142","line":4,"column":33,"nodeType":"143","messageId":"144","endLine":4,"endColumn":40},{"ruleId":"132","severity":1,"message":"135","line":84,"column":37,"nodeType":"134","endLine":89,"endColumn":42},{"ruleId":"132","severity":1,"message":"135","line":104,"column":37,"nodeType":"134","endLine":109,"endColumn":42},{"ruleId":"132","severity":1,"message":"135","line":124,"column":37,"nodeType":"134","endLine":128,"endColumn":42},{"ruleId":"132","severity":1,"message":"135","line":144,"column":37,"nodeType":"134","endLine":148,"endColumn":42},{"ruleId":"132","severity":1,"message":"145","line":163,"column":45,"nodeType":"134","endLine":164,"endColumn":76},{"ruleId":"132","severity":1,"message":"133","line":170,"column":37,"nodeType":"134","endLine":171,"endColumn":62},{"ruleId":"132","severity":1,"message":"136","line":180,"column":37,"nodeType":"134","endLine":181,"endColumn":64},{"ruleId":"126","replacedBy":"146"},{"ruleId":"128","replacedBy":"147"},"no-native-reassign",["148"],"no-negated-in-lhs",["149"],["148"],["149"],"react/jsx-pascal-case","Imported JSX component select must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","Imported JSX component text must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component textarea must be in PascalCase or SCREAMING_SNAKE_CASE","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","no-unused-vars","'actions' is defined but never used.","Identifier","unusedVar","Imported JSX component checkbox must be in PascalCase or SCREAMING_SNAKE_CASE",["148"],["149"],"no-global-assign","no-unsafe-negation"]